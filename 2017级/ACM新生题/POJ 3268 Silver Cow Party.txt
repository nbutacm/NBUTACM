#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int MAXN=1e3+10;
const int INF=0x3f3f3f3f;
int n,m,x,u,v,w;
int map1[MAXN][MAXN],map2[MAXN][MAXN];
int dis1[MAXN],dis2[MAXN];

void Dijkstra(int n,int start,int map[][MAXN],int dis[]){
	bool vis[MAXN];
	int min=INF,v=start;
	for(int i=1;i<=n;i++){
		vis[i]=false;
		dis[i]=map[start][i];
	}
	vis[start]=true;
	for(int i=1;i<=n;i++){
		min=INF;
		for(int j=1;j<=n;j++){
			if(!vis[j]&&dis[j]<min){
				v=j;
				min=dis[j];
			}
		}
		vis[v]=true;
		for(int j=1;j<=n;j++){
			if(!vis[j]&&dis[j]>dis[v]+map[v][j]){
				dis[j]=dis[v]+map[v][j];
			}
		}
	}
}
int main(){
	scanf("%d%d%d",&n,&m,&x);
	for(int i=0;i<=n;i++){
		for(int j=0;j<=n;j++){
			if(i==j) map1[i][j]=map2[i][j]=0;
			else map1[i][j]=map2[i][j]=INF;
		}
	}
	while(m--){
		scanf("%d%d%d",&u,&v,&w);
		if(w<map1[u][v]) map1[u][v]=map2[v][u]=w;
	}
	Dijkstra(n,x,map1,dis1);
	Dijkstra(n,x,map2,dis2);
	int ans=0;
	for(int i=1;i<=n;i++){
		ans=max(ans,dis1[i]+dis2[i]);
	}
	printf("%d\n",ans);
}